@namespace SGE.UI.Components
@using SGE.Aplicacion.Entidades
@using SGE.UI.Entidades
@inject CasoDeUsoObtenerTodosLosUsuarios usuarioTodos
@inject EstadoDeUsuario EstadoDeUsuario
@rendermode InteractiveServer
@page "/usuarios"

@if (EstadoDeUsuario.EsAdmin)
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Email</th>
                <th>Permisos</th>
            </tr>
        </thead>
        <tbody>
            @if (usuarios != null)
            {
                @foreach (Usuario usuario in usuarios)
                {
                    <tr>
                        <td>@usuario.Id</td>
                        <td>@usuario.Nombre</td>
                        <td>@usuario.Apellido</td>
                        <td>@usuario.Email</td>
                        <td><button @onclick="() => Permisos(usuario)">Otorgar Permisos</button></td>
                    </tr>
                }
            }
        </tbody>
    </table>
    @if (permisoOk && usuarioSeleccionado != null)
    {
        <PagOtorgarPermisos usuario="@usuarioSeleccionado" />
    }
}
else
{
    <p>No tiene permisos suficientes para acceder a esta p√°gina.</p>
}

@code {
    private List<Usuario>? usuarios;
    private bool permisoOk = false;
    private Usuario? usuarioSeleccionado;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);

        if (EstadoDeUsuario.usuario != null)
        {
            usuarios = usuarioTodos.Ejecutar(EstadoDeUsuario.usuario.Id);
        }
        else
        {
            usuarios = new List<Usuario>();
        }
    }

    void Permisos(Usuario usuario)
    {
        usuarioSeleccionado = usuario;
        permisoOk = true;
    }
}
