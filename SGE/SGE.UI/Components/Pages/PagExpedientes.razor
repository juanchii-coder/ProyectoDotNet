@namespace SGE.UI.Components
@using SGE.Aplicacion.CasosDeUso.Expediente
@using SGE.Aplicacion.Entidades
@using SGE.UI
@using SGE.UI.Entidades
@inject NavigationManager Navigation
@inject EstadoDeUsuario EstadoDeUsuario
@inject CasoDeUsoExpedienteConsultaTodos expConsultaTodos
@rendermode InteractiveServer
@page "/expedientes"

@if (!EstadoDeUsuario.IsLoggedIn)
{
    Navigation.NavigateTo("/login");
}

@if (crearOk)
{
    <PagCrearExpediente/>
    <button @onclick="Cerrar">Cerrar</button>
}

@if (expedientes == null || expedientes.Count() == 0)
{
        <p>no hay expedientes cargados</p>
        <button @onclick="Crear">crear Expediente</button>
}else{   
    @if (puedeVer)
    {
        <input @bind=@idExpediente placeholder="buscar por id" />
        <button @onclick="()=>BuscarPorId(idExpediente)">Buscar</button>
        <button class="btn btn-danger" @onclick="Crear">crear Expediente</button>
        <PagListaExpediente Expe=@expedientes/>
    }else{
        <p>No tienes permiso para ver expedientes.</p>
    }
}
@code {
    private bool hayExpedientes;
    private bool puedeVer = false;
    private int idExpediente;
    private List<Expediente>? expedientes { get; set; }
    private bool crearOk=false;


    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        puedeVer= EstadoDeUsuario.usuario.Permisos.Any(p => p.Nombre.Equals("EXPEDIENTE_LECTURA"));
        if (puedeVer)
        {
            expedientes = expConsultaTodos.Ejecutar();
            hayExpedientes = expedientes != null && expedientes.Count > 0;
        }
    }
    private void Crear()
    {
        crearOk = EstadoDeUsuario.usuario.Permisos.Any(p => p.Nombre.Equals("EXPEDIENTE_ALTA"));
        //Navigation.NavigateTo("/pagcrearexpediente");
    }

    private void BuscarPorId(int id)
    {
        expedientes = expConsultaTodos.Ejecutar();
        expedientes = expedientes.Where(e => e.Id == id).ToList();
        StateHasChanged();
    }

    private void Cerrar() {
        crearOk = false;
    }
}
