@namespace SGE.UI.Components
@using SGE.Aplicacion.CasosDeUso.Expediente
@using SGE.Aplicacion.Entidades
@using SGE.UI
@inject NavigationManager Navigation
@inject CasoDeUsoExpedienteConsultaTodos expConsultaTodos
@rendermode InteractiveServer
@page "/expedientes/{usuario}"

<h3>expedientes</h3>

@if (usuario==null)
{
    Navigation.NavigateTo("/login");
}
else if (!hayExpedientes)
{
    <p>Cargando....</p>
}
else
{   @if (puedeVer)
    {
        <input @bind=@idExpediente placeholder="buscar por id" />
        <button @onclick="BuscarPorId"/>
        <PopUpBuscar id=@idExpediente usuario=@usuario esExpediente=true />
        <PagListaExpediente Expe=@expedientes User=@usuario/>
    }
}

@code {
    [Parameter]
    public Usuario? usuario { get; set; }
    private bool hayExpedientes = true;
    private bool puedeVer = false;
    private int idExpediente;
    private List<Expediente>? expedientes { get; set; }
    PopUpEditar popUpEditar = null!;
    PopUpBuscar popUpBuscar = null!;


    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        puedeVer= usuario.Permisos.Any(p => p.Nombre.Equals("EXPEDIENTE_LECTURA"));
        expedientes = expConsultaTodos.Ejecutar();
    }
    private void EditarOk()
    {
        popUpEditar.Mostrar();
    }
    private void BuscarPorId()
    {
        popUpBuscar.Mostrar();
    }
}
