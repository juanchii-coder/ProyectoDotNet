@namespace SGE.UI.Components
@page "/expedientes/{usuario:Usuario}"
@using SGE.Aplicacion.CasosDeUso
@using SGE.Aplicacion.Entidades
@inject NavigationManager Navigation
@rendermode InteractiveServer
@inject CasoDeUsoExpedienteAlta expAlta
@inject CasoDeUsoExpedienteBaja expBaja
@inject CasoDeUsoExpedienteConsultaTodos expConsultaTodos
@inject CasoDeUsoExpedienteModificacion expModificacion

<h3>expedientes</h3>

@if (usuario == null)
{
    Navigation.NavigateTo("/login");
}
else if (!hayExpedientes)
{
    <p>no hay expedeintes</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Carátula</th>
                <th>Fecha de Creación</th>
                <th>Última Modificación</th>
                <th>Usuario Última Modificación</th>
                <th>Estado</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                @if (puedeVer)
                {
                    @foreach (Expediente? expediente in expedientes)
                    {
                        <td>@expediente.Id</td>
                        <td>@expediente.Caratula</td>
                        <td>@expediente.FechaCreacion</td>
                        <td>@expediente.UltimaModificacion</td>
                        <td>@expediente.IdUsuario</td>
                        <td>@expediente.Estado</td>
                        <td><button @onclick="()=>VerTramite(expediente)">Ver Expedientes Asociados</button></td>
                        <td>
                            @if (puedeEditar)
                            {
                                <button @onclick="EditarOk">Editar</button>
                                <input @bind="@expediente.Caratula" placeholder="caratula" />

                                @if (puedeEliminar)
                                {
                                    <button>Eliminar</button>
                                }
                            }
                        </td>
                    }
                }
                @if (!puedeVer)
                {
                    <p>no tienes los permisos suficientes</p>
                }
            </tr>
        </tbody>
    </table>
}

@code {
    [Parameter]
    public Usuario? usuario { get; set; }
    private bool hayExpedientes = true;
    private bool puedeVer = true;
    private bool puedeEditar = true;
    private bool puedeEliminar = true;
    private bool editarOk = false;
    private List<Expediente>? expedientes { get; set; }


    protected override async Task OnInitializedAsync()
    {
        expedientes = expConsultaTodos.Ejecutar();
    }
    private void VerTramites(Expediente expe)
    {
        //buscar si existen tramites
        //si no hay tramites asociados hacer un popUp de un msj "no hay tramites asociados al expediente con id x"
        Navigation.NavigateTo($"/tramite/{expe.Id}");
    }
    private void EditarOk()
    {
        editarOk = !editarOk;
    }
}
