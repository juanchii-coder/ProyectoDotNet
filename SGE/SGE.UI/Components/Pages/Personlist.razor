@page "/personlist"
@inject PersonService PersonService
@inject AuthService AuthService
<h3>Person List</h3>

@if (persons == null)
{
    <p>Loading...</p>
}
else
{
    <ul>
        @foreach (var person in persons)
        {
            <li>@person.FullName</li>
            @if (canEdit)
            {
                <button @onclick="() => EditPerson(person.Id)">Edit</button>
            }
            @if (canDelete)
            {
                <button @onclick="() => DeletePerson(person.Id)">Delete</button>
            }
        }
    </ul>
    @if (canAdd)
    {
        <button @onclick="AddPerson">Add Person</button>
    }
}

@code {
    private List<Person> persons;
    private bool canView = false;
    private bool canEdit = false;
    private bool canDelete = false;
    private bool canAdd = false;

    protected override async Task OnInitializedAsync()
    {
        canView = await AuthService.HasPermission("view");
        canEdit = await AuthService.HasPermission("edit");
        canDelete = await AuthService.HasPermission("delete");
        canAdd = await AuthService.HasPermission("add");

        if (canView)
        {
            persons = await PersonService.GetPersons();
        }
    }

    private void EditPerson(int id)
    {
        // Edit person logic
    }

    private void DeletePerson(int id)
    {
        // Delete person logic
    }

    private void AddPerson()
    {
        // Add person logic
    }
}
