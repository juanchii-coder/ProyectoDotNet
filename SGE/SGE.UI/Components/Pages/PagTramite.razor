@namespace SGE.UI.Components
@inject NavigationManager Navigation
@inject CasoDeUsoListarTramites listarTramites
@page "/tramite/{usuario,id}"

@if (usuario == null)
{
    Navigation.NavigateTo("/login");
}
else if (tramites==null)
{
	<p>Cargando....</p>
}
else
{
	if (puedeVer)
	{
		<input @bind=@idTramite placeholder="buscar por id" />
		<button @onclick="BuscarPorId" />
		<PopUpBuscar @ref=popUpBuscar idBuscar =@idTramite User=@usuario esExpediente=@false />
		<PagListaTramites tramites=@tramites User=@usuario />
	}
}

<PagListaTramites usuario=@usuario tramites=@tramites/>
@code {
	[Parameter]
	public int id { get; set; }
	[Parameter]
	public Usuario? usuario{ get; set; }
	private bool puedeVer = false;
	private List<Tramite>? tramites;
	private int idTramite;
	PopUpBuscar? popUpBuscar=null!;
	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		puedeVer = usuario.Permisos.Any(p => p.Nombre.Equals("TRAMITE_LECTURA"));
		tramites = listarTramites.Ejecutar();

	}
	private void BuscarPorId()
	{
		popUpBuscar.Mostrar();
	}
}