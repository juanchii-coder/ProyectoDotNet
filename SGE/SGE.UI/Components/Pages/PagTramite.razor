@namespace SGE.UI.Components
@inject NavigationManager Navigation
@inject EstadoDeUsuario EstadoDeUsuario
@inject CasoDeUsoListarTramites listarTramites
@page "/tramite/{id}"

@if (!EstadoDeUsuario.IsLoggedIn)
{
    Navigation.NavigateTo("/login");
}
else if (tramites==null)
{
	<p>Cargando....</p>
}
else
{
	if (puedeVer)
	{
		<input @bind=@idTramite placeholder="buscar por id" />
		<button @onclick="BuscarPorId" />
		<PopUpBuscar @ref=popUpBuscar id=@idTramite esExpediente=@false />
		<PagListaTramites tramites=@tramites />
	}
}

<PagListaTramites tramites=@tramites/>

@code {
	[Parameter]
	public int id { get; set; } = -1;
	private bool puedeVer = false;
	private List<Tramite>? tramites;
	private int idTramite;
	PopUpBuscar? popUpBuscar=null!;
	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		puedeVer = EstadoDeUsuario.usuario.Permisos.Any(p => p.Nombre.Equals("TRAMITE_LECTURA"));
		if (id == -1)
		{
			tramites = listarTramites.Ejecutar();
		}
		else
		{
			tramites = listarTramites.Ejecutar().Where(t => t.ExpedienteId==id).ToList();
		}

	}
	private void BuscarPorId()
	{
		popUpBuscar.Mostrar();
	}
}