@namespace SGE.UI.Components
@rendermode InteractiveServer
@using SGE.Aplicacion.Enumerativos
@inject NavigationManager Navigation
@inject CasoDeUsoExpedienteAlta expAlta
@inject CasoDeUsoTramiteAlta tramAlta
@inject EstadoDeUsuario User

@if (visible)
{
    <div class="dialogo-contenedor">
        <div class="dialogo-contenido">
            <button class="btn-cerrar" @onclick="Cerrar">X</button>
            <h4>@Mensaje</h4>
            @if (AltaExpediente)
            {
                <label for="Caratula">Carátula:</label>
                <input @bind="@exp.Caratula" placeholder="Carátula" />
                <p>Confirmar creación</p>
                <button class="btn btn-aceptar" @onclick="CrearExpediente">Aceptar</button>
            }
            else
            {
                <label for="Contenido">Contenido:</label>
                <input @bind="@tram.Contenido" placeholder="Contenido" />
                <p>Confirmar creación</p>
                <button class="btn btn-aceptar" @onclick="CrearTramite">Aceptar</button>
            }
        </div>
    </div>
}

@code {
    private bool visible = false;
    [Parameter]
    public string Mensaje { get; set; } = "";
    [Parameter]
    public object? Crear { get; set; }
    [Parameter]
    public bool AltaExpediente { get; set; }
    private Expediente exp = new Expediente(); // Inicialización de objeto Expediente
    private Tramite tram = new Tramite(); // Inicialización de objeto Tramite

    public void Mostrar()
    {
        visible = true;
        InvokeAsync(StateHasChanged);
    }

    void Cerrar()
    {
        visible = false;
        InvokeAsync(StateHasChanged);
    }

    void CrearExpediente()
    {
        expAlta.Ejecutar(exp, User.usuario.Id, "EXPEDIENTE_ALTA");
        visible = false;
        InvokeAsync(StateHasChanged);
    }

    void CrearTramite()
    {
        tramAlta.Ejecutar(tram, User.usuario.Id, "TRAMITE_ALTA");
        visible = false;
        InvokeAsync(StateHasChanged);
    }
}

